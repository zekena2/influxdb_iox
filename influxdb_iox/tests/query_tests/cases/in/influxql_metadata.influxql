-- IOX_SETUP: InfluxQLSelectSupport

-- SHOW MEASUREMENTS
SHOW MEASUREMENTS;
SHOW MEASUREMENTS LIMIT 2;
SHOW MEASUREMENTS OFFSET 1;
SHOW MEASUREMENTS LIMIT 1 OFFSET 2;
SHOW MEASUREMENTS WITH MEASUREMENT =~ /m.*/;
SHOW MEASUREMENTS WITH MEASUREMENT =~ /d\isk/;
SHOW MEASUREMENTS WITH MEASUREMENT = disk;
SHOW MEASUREMENTS WITH MEASUREMENT = does_not_exist;
SHOW MEASUREMENTS WHERE time >= '2022-10-31T02:00:30Z';
SHOW MEASUREMENTS WHERE tag0 = 'a';
SHOW MEASUREMENTS WHERE tag0 = 'a' AND tag1 = 'a';
SHOW MEASUREMENTS WHERE tag0 = "a";

-- invalid queries for `SHOW MEASUREMENTS`
SHOW MEASUREMENTS WITH MEASUREMENT = /my_db/;
SHOW MEASUREMENTS WITH MEASUREMENT =~ my_db;

-- unimplemented features in `SHOW MEASUREMENTS`
SHOW MEASUREMENTS ON my_db;
SHOW MEASUREMENTS WITH MEASUREMENT = x.my_db;
SHOW MEASUREMENTS WITH MEASUREMENT = x.y.my_db;
SHOW MEASUREMENTS WITH MEASUREMENT =~ x./my_db/;
SHOW MEASUREMENTS WITH MEASUREMENT =~ x.y./my_db/;

-- SHOW FIELD KEYS
SHOW FIELD KEYS;
SHOW FIELD KEYS LIMIT 2;
SHOW FIELD KEYS OFFSET 1;
SHOW FIELD KEYS LIMIT 1 OFFSET 2;
SHOW FIELD KEYS FROM cpu;
SHOW FIELD KEYS FROM disk,cpu,disk;
SHOW FIELD KEYS FROM cpu,disk,cpu;
SHOW FIELD KEYS FROM /m.*/;
SHOW FIELD KEYS FROM /d\isk/;
SHOW FIELD KEYS FROM does_not_exist;
SHOW FIELD KEYS FROM "";

-- unimplemented features in `SHOW FIELD KEYS`
SHOW FIELD KEYS ON my_db;
SHOW FIELD KEYS FROM x.my_db;
SHOW FIELD KEYS FROM x.y.my_db;

-- SHOW TAG VALUES
SHOW TAG VALUES WITH KEY = "tag0";
SHOW TAG VALUES WITH KEY = "does_not_exist";
SHOW TAG VALUES WITH KEY != "tag0";
SHOW TAG VALUES WITH KEY != "does_not_exist";
SHOW TAG VALUES WITH KEY =~ /tag.*/;
SHOW TAG VALUES WITH KEY !~ /tag.*/;
SHOW TAG VALUES WITH KEY IN ("device", "host", "device");
SHOW TAG VALUES WITH KEY = "tag0" LIMIT 2;
SHOW TAG VALUES WITH KEY = "tag0" OFFSET 1;
SHOW TAG VALUES WITH KEY = "tag0" LIMIT 1 OFFSET 2;
SHOW TAG VALUES FROM m0 WITH KEY = "tag0";
SHOW TAG VALUES FROM m0,m1,m0 WITH KEY = "tag0";
SHOW TAG VALUES FROM m1,m0,m1 WITH KEY = "tag0";
SHOW TAG VALUES FROM /m.*/ WITH KEY = "tag0";
SHOW TAG VALUES FROM /d\isk/ WITH KEY = "device";
SHOW TAG VALUES FROM does_not_exist WITH KEY = "tag0";
SHOW TAG VALUES FROM "" WITH KEY = "tag0";
SHOW TAG VALUES WITH KEY = "tt_tag";
SHOW TAG VALUES WITH KEY = "tt_tag" WHERE time >= '1990-01-01T00:00:00Z';
SHOW TAG VALUES WITH KEY = "tt_tag" WHERE time >= '2022-10-31T02:00:00Z';
SHOW TAG VALUES WITH KEY = "tt_tag" WHERE time >= '1970-01-01T01:00:00Z';
SHOW TAG VALUES WITH KEY = "st_tag" WHERE tag0 = 'a';
SHOW TAG VALUES WITH KEY = "st_tag" WHERE tag0 = 'a' AND tag1 = 'b';
SHOW TAG VALUES WITH KEY = "st_tag" WHERE tag0 = "a";

-- unimplemented features in `SHOW TAG VALUES`
SHOW TAG VALUES ON my_db WITH KEY = "tag0";
SHOW TAG VALUES FROM x.my_db WITH KEY = "tag0";
SHOW TAG VALUES FROM x.y.my_db WITH KEY = "tag0";

-- SHOW TAG KEYS
SHOW TAG KEYS;
SHOW TAG KEYS LIMIT 1;
SHOW TAG KEYS OFFSET 1;
SHOW TAG KEYS LIMIT 1 OFFSET 1;
SHOW TAG KEYS FROM cpu;
SHOW TAG KEYS FROM disk,cpu,disk;
SHOW TAG KEYS FROM cpu,disk,cpu;
SHOW TAG KEYS FROM /m.*/;
SHOW TAG KEYS FROM /d\isk/;
SHOW TAG KEYS FROM does_not_exist;
SHOW TAG KEYS FROM "";
SHOW TAG KEYS FROM time_test WHERE time >= '1990-01-01T00:00:00Z';
SHOW TAG KEYS FROM time_test WHERE time >= '2022-10-31T02:00:00Z';
SHOW TAG KEYS FROM time_test WHERE time >= '1970-01-01T01:00:00Z';
SHOW TAG KEYS FROM select_test WHERE tag0 = 'a';
SHOW TAG KEYS FROM select_test WHERE tag0 = 'a' AND tag1 = 'b';
SHOW TAG KEYS FROM select_test WHERE tag0 = "a";
SHOW TAG KEYS WHERE tag0 = 'a';

-- unimplemented features in `SHOW TAG KEYS`
SHOW TAG KEYS ON my_db;
SHOW TAG KEYS FROM x.my_db;
SHOW TAG KEYS FROM x.y.my_db;

-- SHOW RETENTION POLICIES
-- N.B. The current implemention is extremely simplistic and assumes
-- every database contains a single, default, retention policy. This
-- to avoid the need for complex catalogue queries.
SHOW RETENTION POLICIES;

-- unimplemented features in `SHOW RETENTION POLICIES`
SHOW RETENTION POLICIES ON my_db;